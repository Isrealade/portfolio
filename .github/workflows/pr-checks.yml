name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  # Comprehensive testing for pull requests
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code formatting
      run: |
        if [ -f ".prettierrc" ] || grep -q '"prettier"' package.json; then
          npx prettier --check .
        else
          echo "Prettier not configured, skipping format check..."
        fi
      continue-on-error: true
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Type checking
      run: npm run build
      
    - name: Check bundle size
      run: |
        npm run build
        echo "=== Bundle Analysis ==="
        if [ -f "out/_next/static/chunks/pages/_app-*.js" ]; then
          ls -lh out/_next/static/chunks/pages/ | head -10
        fi
        echo "=== Build Output Size ==="
        du -sh out/
        
    - name: Test deployment build
      run: |
        echo "Testing production build..."
        if [ ! -f "out/index.html" ]; then
          echo "❌ Missing index.html in build output"
          exit 1
        fi
        echo "✅ Build output looks good"
        
    - name: Performance check
      run: |
        echo "=== Performance Metrics ==="
        echo "Total files in build: $(find out -type f | wc -l)"
        echo "CSS files: $(find out -name "*.css" | wc -l)"
        echo "JS files: $(find out -name "*.js" | wc -l)"
        echo "Image files: $(find out -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" | wc -l)"

  # Code quality analysis
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Analyze dependencies
      run: |
        echo "=== Dependency Analysis ==="
        npm ls --depth=0
        echo ""
        echo "=== Security Audit ==="
        npm audit --audit-level=moderate || true
        
    - name: Check for large files
      run: |
        echo "=== Large Files Check ==="
        find . -type f -size +1M -not -path "./node_modules/*" -not -path "./.git/*" | head -10 || echo "No large files found"
        
    - name: Validate package.json
      run: |
        echo "=== Package.json Validation ==="
        npm run build > build.log 2>&1
        if grep -q "warning" build.log; then
          echo "⚠️  Build warnings found:"
          grep "warning" build.log
        else
          echo "✅ No build warnings"
        fi

  # Terminal functionality tests
  terminal-tests:
    name: Terminal Feature Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test terminal components build
      run: |
        npm run build
        echo "=== Terminal Components Check ==="
        if grep -r "TerminalInterface" out/; then
          echo "✅ Terminal components included in build"
        else
          echo "❌ Terminal components missing from build"
          exit 1
        fi
        
    - name: Validate terminal assets
      run: |
        echo "=== Terminal Assets Validation ==="
        # Check if terminal-related files are properly built
        if [ -f "src/lib/terminal-filesystem.ts" ] && [ -f "src/lib/terminal-commands.ts" ]; then
          echo "✅ Terminal core files present"
        else
          echo "❌ Terminal core files missing"
          exit 1
        fi